.data
a: .word 5
b: .word 4
pregunta_1: .asciiz "Introduce un primer argumento: "
pregunta_2: .asciiz "Introduce un segundo argumento: "
resultado: .asciiz "El factorial del numero introducido es: "

.text
.globl main
main: 	# Preambulo main
 	li $v0, 4	# Codigo para imprimir string
	la $a0, pregunta_1  # Carga pregunta_1
	syscall 	# Imprime primera pregunta
	
	li $v0, 5 	# Syscall se transforma a recibe Int del usuario.
	syscall		# Pide y guarda el input en $v0
	move $a0, $s0 	# Movemos el input del usuario a $a0

 	li $v0, 4	# Codigo para imprimir string
	la $a0, pregunta_2  # Carga pregunta_2
	syscall 	# Imprime segunda pregunta
	
	li $v0, 5 	# Syscall se transforma a recibe Int del usuario.
	syscall		# Pide y guarda el input en $v0
	move $a1, $s0 	# Movemos el input del usuario a $a1
	 
	syscall		# Pide y guarda el input en $v0
	move $a0, $s0 	# Movemos el input del usuario a $a0
 
 	# Invocación de mist_1
 	jal mist_1
 	# Retorno de mist_1	
 	# Conclusión main
	li $v0, 1 	# Instrucción para imrpimir un entero
	move $a0, $v1	# Cargar el resultado para imprimir
	syscall	# Imprime el resultado
	
	li $v0, 10 	# Salir del  programa
	syscall
 
# mist_1 recibe como argumentos #a0 y $a1
mist_1: # Preambulo mist_1
 	move $s0, $a0	# Movemos el argumento 0 al guardado 0
 	move $t0, $a1	# Movemos el argumento 1 al guardado temporal 0
 	li $t1, 1	# Cargamos el valor 1 en el registro temporal 1 
 	
loop_1: 
	beqz $s0, end_1	# Brincamos a la etiqueta end_1 para terminar las subrutinas
 	# Invocación de mist_0
 	move $a0, $t0	# Se pasa el argumento $a0
 	move $a1, $t1	# $e pasa el argumento $a1
 	# Retorno de mist_0
 	move $t1, $v0
 	subi $s0, $s0, 1
 	j loop_1
 	
end_1:	# Conclusión de mist_1
 	move $v0, $t1	# Se retorna el resultado en $v0
 	jr $ra
 	
# mist_0 recibe como argumentos $a0 y $a1
mist_0:	# Preambulo mist_0
 	mult $a0, $a1
 	# Conclusión mist_0
 	mflo $v0 	# Se retorna el resultado en #$v0
